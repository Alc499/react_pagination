{"version":3,"sources":["api/getData.js","components/User.js","components/Comment.js","components/CommentList.js","components/Post.js","components/PostList.js","components/Pagination.js","App.js","index.js"],"names":["url","getPosts","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","abrupt","fetch","concat","then","response","json","stop","apply","this","arguments","getUsers","_ref2","_callee2","_context2","getComments","_ref3","_callee3","_context3","getData","_ref4","_callee4","posts","users","comments","_context4","sent","map","post","objectSpread","user","find","id","userId","filter","comment","postId","User","react_default","createElement","className","name","email","Comment","currentComment","body","CommentList","commentData","components_Comment","key","Post","state","isVisible","toggleComments","_this","setState","prevState","props","title","components_User","Fragment","components_CommentList","type","onClick","length","React","Component","PostList","components_Post","Pagination","currentPage","perPage","postsAmmount","changeCurrentPage","lastPage","Math","ceil","pages","i","push","disabled","classnames","pagination-buttons__active","page","App","postsPerPage","loadData","changePerPageAmmount","event","value","target","_this$state","firstIndex","lastIndex","onChange","components_Pagination","components_PostList","slice","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.87141c17.chunk.js","sourcesContent":["const url = 'https://jsonplaceholder.typicode.com/';\n\nconst getPosts = async() => (\n  fetch(`${url}posts`)\n    .then(response => response.json())\n);\n\nconst getUsers = async() => (\n  fetch(`${url}users`)\n    .then(response => response.json())\n);\n\nconst getComments = async() => (\n  fetch(`${url}comments`)\n    .then(response => response.json())\n);\n\nconst getData = async() => {\n  const posts = await getPosts();\n  const users = await getUsers();\n  const comments = await getComments();\n\n  return posts.map(post => ({\n    ...post,\n    user: users.find(user => user.id === post.userId),\n    comments: comments.filter(comment => comment.postId === post.id),\n  }));\n};\n\nexport default getData;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ user }) => (\n  <div className=\"user-info\">\n    <div>{ user.name }</div>\n    <div>{ user.email }</div>\n  </div>\n);\n\nUser.propTypes = {\n  user: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Comment = ({ currentComment }) => (\n  <div className=\"comment\">\n    <div className=\"comment__email\">{ currentComment.email }</div>\n    <h2 className=\"comment__name\">{ currentComment.name }</h2>\n    <p className=\"comment__text\">{ currentComment.body }</p>\n  </div>\n);\n\nComment.propTypes = {\n  currentComment: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Comment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Comment from './Comment';\n\nconst CommentList = ({ comments }) => (\n  <div className=\"comment-list\">\n    {comments.map(commentData => (\n      <Comment currentComment={commentData} key={commentData.id} />\n    ))}\n  </div>\n);\n\nCommentList.propTypes = {\n  comments: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default CommentList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport User from './User';\nimport CommentList from './CommentList';\n\nclass Post extends React.Component {\n  state = {\n    isVisible: false,\n  }\n\n  toggleComments = () => {\n    this.setState(prevState => ({\n      isVisible: !prevState.isVisible,\n    }));\n  }\n\n  render() {\n    const { post } = this.props;\n    const { isVisible } = this.state;\n\n    return (\n      <article className=\"post\">\n        <h2 className=\"post__title\">{ post.title }</h2>\n\n        <User user={post.user} />\n\n        <p className=\"post__text\">{post.body}</p>\n\n        { isVisible ? (\n          <>\n            <CommentList\n              comments={post.comments}\n            />\n            <button\n              type=\"button\"\n              onClick={this.toggleComments}\n              className=\"comment-btn\"\n            >\n              Hide comments\n            </button>\n          </>\n\n        ) : (\n          <button\n            type=\"button\"\n            onClick={this.toggleComments}\n            className=\"comment-btn\"\n          >\n            {`Show comments (${post.comments.length})`}\n          </button>\n        )\n        }\n      </article>\n    );\n  }\n}\n\nPost.propTypes = {\n  post: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    body: PropTypes.string.isRequired,\n    user: PropTypes.object.isRequired,\n    comments: PropTypes.object.isRequired,\n  }).isRequired,\n};\n\nexport default Post;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Post from './Post';\n\nconst PostList = ({ posts }) => (\n  <div className=\"post-list-wrapper\">\n    {posts.map(post => (\n      <Post\n        post={post}\n        key={post.id}\n      />\n    ))}\n  </div>\n);\n\nPostList.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default PostList;\n","import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst Pagination = ({\n  currentPage,\n  perPage,\n  postsAmmount,\n  changeCurrentPage,\n}) => {\n  const lastPage = Math.ceil(postsAmmount / perPage);\n  const pages = [];\n\n  for (let i = 1; i < lastPage - 1; i += 1) {\n    pages.push(i);\n  }\n\n  return (\n    <ul className=\"pagination__buttons\">\n      <button\n        type=\"button\"\n        onClick={() => changeCurrentPage(currentPage - 1)}\n        className=\"pagination__button\"\n        disabled={currentPage === 0}\n      >\n        ...prev\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={() => changeCurrentPage(0)}\n        className={classnames('pagination__button', {\n          'pagination-buttons__active': currentPage === 1,\n        })}\n      >\n        1\n      </button>\n\n      {pages.map(page => (\n        <li key={page}>\n          <button\n            type=\"button\"\n            onClick={() => changeCurrentPage(page)}\n            className={classnames('pagination__button', {\n              'pagination-buttons__active': currentPage === page,\n            })}\n          >\n            {page + 1}\n          </button>\n        </li>\n      ))}\n\n      <button\n        type=\"button\"\n        onClick={() => changeCurrentPage(lastPage - 1)}\n        className={classnames('pagination__button', {\n          'pagination-buttons__active': currentPage === lastPage,\n        })}\n      >\n        {lastPage}\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={() => changeCurrentPage(currentPage + 1)}\n        className=\"pagination__button\"\n        disabled={currentPage === lastPage - 1}\n      >\n        next...\n      </button>\n    </ul>\n  );\n};\n\nPagination.propTypes = {\n  currentPage: PropTypes.number.isRequired,\n  perPage: PropTypes.number.isRequired,\n  postsAmmount: PropTypes.number.isRequired,\n  changeCurrentPage: PropTypes.func.isRequired,\n};\n\nexport default Pagination;\n","import React from 'react';\nimport './App.css';\n\nimport getData from './api/getData';\nimport PostList from './components/PostList';\nimport Pagination from './components/Pagination';\n\nclass App extends React.Component {\n  state = {\n    posts: [],\n    postsAmmount: 0,\n    currentPage: 0,\n    postsPerPage: 5,\n  }\n\n  componentDidMount() {\n    this.loadData();\n  }\n\n  loadData = async() => {\n    const posts = await getData();\n\n    this.setState({\n      posts,\n      postsAmmount: posts.length,\n    });\n  }\n\n  changeCurrentPage = (currentPage) => {\n    this.setState({ currentPage });\n  }\n\n  changePerPageAmmount = (event) => {\n    const { value } = event.target;\n\n    this.setState({\n      postsPerPage: +value,\n      currentPage: 0,\n    });\n  }\n\n  render() {\n    const {\n      posts,\n      currentPage,\n      postsPerPage,\n      postsAmmount,\n    } = this.state;\n\n    const firstIndex = currentPage * postsPerPage;\n    const lastIndex = currentPage * postsPerPage + postsPerPage;\n\n    return (\n      <div className=\"App\">\n        <h1>Dynamic list of posts</h1>\n\n        <div className=\"pagination\">\n          <select\n            onChange={this.changePerPageAmmount}\n            className=\"pagination__posts-ammount\"\n          >\n            <option value={0}>Posts Ammount</option>\n            <option value={5}>5</option>\n            <option value={10}>10</option>\n            <option value={15}>15</option>\n            <option value={20}>20</option>\n          </select>\n\n          <Pagination\n            currentPage={currentPage}\n            perPage={postsPerPage}\n            postsAmmount={postsAmmount}\n            changeCurrentPage={this.changeCurrentPage}\n          />\n\n        </div>\n\n        <div className=\"with-info\">\n          {`${firstIndex + 1} - ${lastIndex <= postsAmmount\n            ? lastIndex\n            : postsAmmount\n          } of ${postsAmmount} posts`}\n        </div>\n\n        <PostList\n          posts={posts.slice(firstIndex, lastIndex)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}
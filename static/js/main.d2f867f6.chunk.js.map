{"version":3,"sources":["api/getData.js","components/User.js","components/Comment.js","components/CommentList.js","components/Post.js","components/PostList.js","components/Pagination.js","App.js","index.js"],"names":["getPosts","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","abrupt","fetch","then","response","json","stop","apply","this","arguments","getUsers","_ref2","_callee2","_context2","getComments","_ref3","_callee3","_context3","getData","_ref4","_callee4","posts","users","comments","_context4","sent","map","post","objectSpread","user","find","id","userId","filter","comment","postId","User","react_default","createElement","className","name","email","Comment","body","CommentList","components_Comment","key","Post","state","isVisible","toggleComments","_this","setState","prevState","props","title","components_User","Fragment","components_CommentList","type","onClick","concat","length","React","Component","PostList","components_Post","Pagination","currentPage","perPage","postsAmmount","changeCurrentPage","lastPage","Math","ceil","pages","i","push","disabled","classnames","pagination-buttons__active","page","App","postsPerPage","loadData","changePerPageAmmount","event","value","target","_this$state","firstIndex","lastIndex","onChange","components_Pagination","components_PostList","slice","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.d2f867f6.chunk.js","sourcesContent":["const getPosts = async() => {\n  const url = 'https://jsonplaceholder.typicode.com/posts';\n\n  return fetch(url)\n    .then(response => response.json());\n};\n\nconst getUsers = async() => {\n  const url = 'https://jsonplaceholder.typicode.com/users';\n\n  return fetch(url)\n    .then(response => response.json());\n};\n\nconst getComments = async() => {\n  const url = 'https://jsonplaceholder.typicode.com/comments';\n\n  return fetch(url)\n    .then(response => response.json());\n};\n\nconst getData = async() => {\n  const posts = await getPosts();\n  const users = await getUsers();\n  const comments = await getComments();\n\n  return posts.map(post => ({\n    ...post,\n    user: users.find(user => user.id === post.userId),\n    comments: comments.filter(comment => comment.postId === post.id),\n  }));\n};\n\nexport default getData;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ user }) => (\n  <div className=\"user-info\">\n    <div>{ user.name }</div>\n    <div>{ user.email }</div>\n  </div>\n);\n\nUser.propTypes = {\n  user: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Comment = ({ comment }) => (\n  <div className=\"comment\">\n    <div className=\"comment__email\">{ comment.email }</div>\n    <h2 className=\"comment__name\">{ comment.name }</h2>\n    <p className=\"comment__text\">{ comment.body }</p>\n  </div>\n);\n\nComment.propTypes = {\n  comment: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default Comment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Comment from './Comment';\n\nconst CommentList = ({ comments }) => (\n  <div className=\"comment-list\">\n    {comments.map(comment => (\n      <Comment comment={comment} key={comment.id} />\n    ))}\n  </div>\n);\n\nCommentList.propTypes = {\n  comments: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default CommentList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport User from './User';\nimport CommentList from './CommentList';\n\nclass Post extends React.Component {\n  state = {\n    isVisible: false,\n  }\n\n  toggleComments = () => {\n    this.setState(prevState => ({\n      isVisible: !prevState.isVisible,\n    }));\n  }\n\n  render() {\n    const { post } = this.props;\n    const { isVisible } = this.state;\n\n    return (\n      <article className=\"post\">\n        <h2 className=\"post__title\">{ post.title }</h2>\n\n        <User user={post.user} />\n\n        <p className=\"post__text\">{post.body}</p>\n\n        { isVisible ? (\n          <>\n            <CommentList\n              comments={post.comments}\n            />\n            <button\n              type=\"button\"\n              onClick={this.toggleComments}\n              className=\"comment-btn\"\n            >\n              Hide comments\n            </button>\n          </>\n\n        ) : (\n          <button\n            type=\"button\"\n            onClick={this.toggleComments}\n            className=\"comment-btn\"\n          >\n            {`Show comments (${post.comments.length})`}\n          </button>\n        )\n        }\n      </article>\n    );\n  }\n}\n\nPost.propTypes = {\n  post: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    body: PropTypes.string.isRequired,\n    user: PropTypes.object.isRequired,\n    comments: PropTypes.object.isRequired,\n  }).isRequired,\n};\n\nexport default Post;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Post from './Post';\n\n// import comments from '../api/comments';\n\nconst PostList = ({ posts }) => (\n  <div className=\"post-list-wrapper\">\n    {posts.map(post => (\n      <Post\n        post={post}\n        key={post.id}\n      />\n    ))}\n  </div>\n);\n\nPostList.propTypes = {\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default PostList;\n","import React from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\n\nconst Pagination = ({\n  currentPage,\n  perPage,\n  postsAmmount,\n  changeCurrentPage,\n}) => {\n  const lastPage = Math.ceil(postsAmmount / perPage);\n  const pages = [];\n\n  for (let i = 1; i < lastPage - 1; i += 1) {\n    pages.push(i);\n  }\n\n  return (\n    <ul className=\"pagination__buttons\">\n      <button\n        type=\"button\"\n        onClick={() => changeCurrentPage(currentPage - 1)}\n        className=\"pagination__button\"\n        disabled={currentPage === 0 || false}\n      >\n        ...prev\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={() => changeCurrentPage(0)}\n        className={classnames('pagination__button', {\n          'pagination-buttons__active': currentPage === 1,\n        })}\n      >\n        1\n      </button>\n\n      {pages.map(page => (\n        <li key={page}>\n          <button\n            type=\"button\"\n            onClick={() => changeCurrentPage(page)}\n            className={classnames('pagination__button', {\n              'pagination-buttons__active': currentPage === page,\n            })}\n          >\n            {page + 1}\n          </button>\n        </li>\n      ))}\n\n      <button\n        type=\"button\"\n        onClick={() => changeCurrentPage(lastPage - 1)}\n        className={classnames('pagination__button', {\n          'pagination-buttons__active': currentPage === lastPage,\n        })}\n      >\n        {lastPage}\n      </button>\n\n      <button\n        type=\"button\"\n        onClick={() => changeCurrentPage(currentPage + 1)}\n        className=\"pagination__button\"\n        disabled={currentPage === (lastPage - 1) || false}\n      >\n        next...\n      </button>\n    </ul>\n  );\n};\n\nPagination.propTypes = {\n  currentPage: PropTypes.number.isRequired,\n  perPage: PropTypes.number.isRequired,\n  postsAmmount: PropTypes.number.isRequired,\n  changeCurrentPage: PropTypes.func.isRequired,\n};\n\nexport default Pagination;\n","import React from 'react';\nimport './App.css';\n\nimport getData from './api/getData';\nimport PostList from './components/PostList';\nimport Pagination from './components/Pagination';\n\nclass App extends React.Component {\n  state = {\n    posts: [],\n    postsAmmount: 0,\n    currentPage: 0,\n    postsPerPage: 5,\n  }\n\n  async componentDidMount() {\n    this.loadData();\n  }\n\n  loadData = async() => {\n    const posts = await getData();\n\n    this.setState({\n      posts,\n      postsAmmount: posts.length,\n    });\n  }\n\n  changeCurrentPage = (currentPage) => {\n    this.setState({ currentPage });\n  }\n\n  changePerPageAmmount = (event) => {\n    const { value } = event.target;\n\n    this.setState({\n      postsPerPage: +value,\n      currentPage: 0,\n    });\n  }\n\n  render() {\n    const {\n      posts,\n      currentPage,\n      postsPerPage,\n      postsAmmount,\n    } = this.state;\n\n    const firstIndex = currentPage * postsPerPage;\n    const lastIndex = currentPage * postsPerPage + postsPerPage;\n\n    return (\n      <div className=\"App\">\n        <h1>Dynamic list of posts</h1>\n\n        <div className=\"pagination\">\n          <select\n            onChange={this.changePerPageAmmount}\n            className=\"pagination__posts-ammount\"\n          >\n            <option value={0}>Posts Ammount</option>\n            <option value={5}>5</option>\n            <option value={10}>10</option>\n            <option value={15}>15</option>\n            <option value={20}>20</option>\n          </select>\n\n          <Pagination\n            currentPage={currentPage}\n            perPage={postsPerPage}\n            postsAmmount={postsAmmount}\n            changeCurrentPage={this.changeCurrentPage}\n          />\n\n        </div>\n\n        <div className=\"with-info\">\n          {`${firstIndex + 1} - ${lastIndex} of ${postsAmmount} posts`}\n        </div>\n\n        <PostList\n          posts={posts.slice(firstIndex, lastIndex)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}